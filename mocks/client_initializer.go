// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"github.com/aws/aws-sdk-go/service/dynamodb/dynamodbiface"
	"github.com/fwojciec/ddblocal"
	"sync"
)

var (
	lockClientInitializerMockInitClient sync.RWMutex
)

// Ensure, that ClientInitializerMock does implement ddblocal.ClientInitializer.
// If this is not the case, regenerate this file with moq.
var _ ddblocal.ClientInitializer = &ClientInitializerMock{}

// ClientInitializerMock is a mock implementation of ddblocal.ClientInitializer.
//
//     func TestSomethingThatUsesClientInitializer(t *testing.T) {
//
//         // make and configure a mocked ddblocal.ClientInitializer
//         mockedClientInitializer := &ClientInitializerMock{
//             InitClientFunc: func(port int) (dynamodbiface.DynamoDBAPI, error) {
// 	               panic("mock out the InitClient method")
//             },
//         }
//
//         // use mockedClientInitializer in code that requires ddblocal.ClientInitializer
//         // and then make assertions.
//
//     }
type ClientInitializerMock struct {
	// InitClientFunc mocks the InitClient method.
	InitClientFunc func(port int) (dynamodbiface.DynamoDBAPI, error)

	// calls tracks calls to the methods.
	calls struct {
		// InitClient holds details about calls to the InitClient method.
		InitClient []struct {
			// Port is the port argument value.
			Port int
		}
	}
}

// InitClient calls InitClientFunc.
func (mock *ClientInitializerMock) InitClient(port int) (dynamodbiface.DynamoDBAPI, error) {
	if mock.InitClientFunc == nil {
		panic("ClientInitializerMock.InitClientFunc: method is nil but ClientInitializer.InitClient was just called")
	}
	callInfo := struct {
		Port int
	}{
		Port: port,
	}
	lockClientInitializerMockInitClient.Lock()
	mock.calls.InitClient = append(mock.calls.InitClient, callInfo)
	lockClientInitializerMockInitClient.Unlock()
	return mock.InitClientFunc(port)
}

// InitClientCalls gets all the calls that were made to InitClient.
// Check the length with:
//     len(mockedClientInitializer.InitClientCalls())
func (mock *ClientInitializerMock) InitClientCalls() []struct {
	Port int
} {
	var calls []struct {
		Port int
	}
	lockClientInitializerMockInitClient.RLock()
	calls = mock.calls.InitClient
	lockClientInitializerMockInitClient.RUnlock()
	return calls
}
