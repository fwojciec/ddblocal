// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"github.com/fwojciec/ddblocal"
	"sync"
)

var (
	lockPresenceCheckerMockIsPresent sync.RWMutex
)

// Ensure, that PresenceCheckerMock does implement ddblocal.PresenceChecker.
// If this is not the case, regenerate this file with moq.
var _ ddblocal.PresenceChecker = &PresenceCheckerMock{}

// PresenceCheckerMock is a mock implementation of ddblocal.PresenceChecker.
//
//     func TestSomethingThatUsesPresenceChecker(t *testing.T) {
//
//         // make and configure a mocked ddblocal.PresenceChecker
//         mockedPresenceChecker := &PresenceCheckerMock{
//             IsPresentFunc: func(port int) bool {
// 	               panic("mock out the IsPresent method")
//             },
//         }
//
//         // use mockedPresenceChecker in code that requires ddblocal.PresenceChecker
//         // and then make assertions.
//
//     }
type PresenceCheckerMock struct {
	// IsPresentFunc mocks the IsPresent method.
	IsPresentFunc func(port int) bool

	// calls tracks calls to the methods.
	calls struct {
		// IsPresent holds details about calls to the IsPresent method.
		IsPresent []struct {
			// Port is the port argument value.
			Port int
		}
	}
}

// IsPresent calls IsPresentFunc.
func (mock *PresenceCheckerMock) IsPresent(port int) bool {
	if mock.IsPresentFunc == nil {
		panic("PresenceCheckerMock.IsPresentFunc: method is nil but PresenceChecker.IsPresent was just called")
	}
	callInfo := struct {
		Port int
	}{
		Port: port,
	}
	lockPresenceCheckerMockIsPresent.Lock()
	mock.calls.IsPresent = append(mock.calls.IsPresent, callInfo)
	lockPresenceCheckerMockIsPresent.Unlock()
	return mock.IsPresentFunc(port)
}

// IsPresentCalls gets all the calls that were made to IsPresent.
// Check the length with:
//     len(mockedPresenceChecker.IsPresentCalls())
func (mock *PresenceCheckerMock) IsPresentCalls() []struct {
	Port int
} {
	var calls []struct {
		Port int
	}
	lockPresenceCheckerMockIsPresent.RLock()
	calls = mock.calls.IsPresent
	lockPresenceCheckerMockIsPresent.RUnlock()
	return calls
}
